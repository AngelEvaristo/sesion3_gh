name: GITHUB_WORKFLOW

run-name: "GITHUB RUN"

on:
  # push:
  #   branches:
  #     - main
  pull_request:
    branches: [ "main" ]  
  workflow_dispatch: {} 
  # workflow_dispatch:
  #   inputs:
  #     version:
  #       description: "Versión de la app"
  #       required: false
  #       default: "20"           

jobs:
  Compilacion:
    runs-on: ubuntu-latest
    steps:    
      # - name: Run a Docker action (Alpine)
      #   uses: docker://alpine:3.18
      #   with:
      #     args: echo "Hola desde Alpine dentro de GitHub Actions"

      - uses: actions/checkout@v4  

      - name: Setear versión de Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"   # Cambia a la versión que necesites
          cache: 'npm'         # Opcional: cachea dependencias npm 

      - name: Instalar dependencias
        run: |
          echo "Versión: 20"
          npm install -g @angular/cli
          npm install

      - name: Compilar aplicación
        run: ng build --configuration production   

      # - name: Comprimir con PowerShell
      #   shell: pwsh
      #   run: |
      #     # if (Test-Path dist/my-first-angular-app/browser) { Remove-Item dist/my-first-angular-app/browser -Force }
      #     Push-Location "dist/my-first-angular-app/browser"
      #     Compress-Archive -Path * -DestinationPath "$env:GITHUB_WORKSPACE/app.zip"
      #     Pop-Location        
#########
##COMPOSITE
#########
      - name: Crear ZIP usando composite action
        uses: ./.github/actions/createzip
        with:
          source: dist/my-first-angular-app/browser
          output: app.zip

      - name: Publicar artefacto
        uses: actions/upload-artifact@v4
        with:
          name: app-zip2
          path: app.zip

  DeployDEV:
    runs-on: ubuntu-latest
    needs: Compilacion
    environment: DEV
    steps: 
      - name: Descargar artefacto
        uses: actions/download-artifact@v4
        with:
          name: app-zip2
          path: .  
      - name: Echo var env
        run: |
          echo "Versión: ${{ vars.VARIABLE }}"  

      - name: Login en Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_SECRET }}

      - name: Deploy al Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: "${{ vars.APPNAME }}"   # reemplaza con el nombre real
          package: app.zip


  # DeployCERT:
  #   runs-on: ubuntu-latest
  #   needs: DeployDEV
  #   environment: CERT
  #   steps: 
  #     # - name: Descargar artefacto
  #     #   uses: actions/download-artifact@v4
  #     #   with:
  #     #     name: app-zip2
  #     #     path: .  
  #     - name: Echo var env
  #       run: |
  #         echo "Versión: ${{ vars.VARIABLE }}" 

#########
##REUSABLE WORKFLOW LOCAL
#########
  # call-build:
  #   uses: ./.github/workflows/reusable.yml
  #   with:
  #     app-name: "mi-webapp-angular"
  #     source-path: "dist/my-first-angular-app/browser"
#########
##REUSABLE WORKFLOW REMOTE
#########
  # call-build:
  #   uses: AngelEvaristo/templatestest/.github/workflows/template.yml@main
  #   with:
  #     app-name: "mi-webapp-angular"
  #     source-path: "dist/my-first-angular-app/browser"  

  # Compilacion_2:
  #   runs-on: ubuntu-latest
  #   steps:    
  #     - uses: actions/checkout@v4  

  #     - name: Setear versión de Node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "20"   # Cambia a la versión que necesites
  #         cache: 'npm'         # Opcional: cachea dependencias npm 

  #     - name: Instalar dependencias
  #       run: |
  #         echo "Versión: 20"
  #         npm install -g @angular/cli
  #         npm install

  #     - name: Compilar aplicación
  #       run: ng build --configuration production   

  #     - name: Comprimir con PowerShell
  #       shell: pwsh
  #       run: |
  #         # if (Test-Path dist/my-first-angular-app/browser) { Remove-Item dist/my-first-angular-app/browser -Force }
  #         Push-Location "dist/my-first-angular-app/browser"
  #         Compress-Archive -Path * -DestinationPath "$env:GITHUB_WORKSPACE/app.zip"
  #         Pop-Location        

  #     - name: Publicar artefacto
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: app-zip3
  #         path: app.zip

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [Compilacion, Compilacion_2]
  #   steps:
  #     - name: Descargar artefacto
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: app-zip2
  #         path: .